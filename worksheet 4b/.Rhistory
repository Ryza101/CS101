factor_Months
summary(Months)
summary(factor_Months)
summary(Months)
summary(factor_Months)
Months <- c("March", "April", "JAnuary", "November", "January", "September", "October", "September", "November", "August", "January", "November", "November", "Febraury", "May", "Augsut")
factor_Months <- factor(Months)
factor_Months
factor_data <- factor(Directions, levels = c("East", "West", "North"))
new_order_data <- factor(factor_data, levels = c("East", "West", "North"))
new_order_data
data <- read.table("~/DataScience/CS101/worksheet 4a/import_march.csv", header = TRUE, sep = ",", stringsAsFactors = FALSE)
head(data)
exhaustive_search <- function(selected_number)
if (selected_number < 1 || selected_number > 50) {
return("The number selected is beyond the range of 1 to 50")
} else if (selected_number == 20) {
return("TRUE")
} else {
return(as.character(selected_number))
}
set.seed(Sys.time())
random_number <- sample(1:50, 1)
cat("The chosen number is:", random_number, "\n")
result <- exhaustive_search(random_number)
cat("Result:", result, "\n")
min_bills <- function(price) {
bills <- c(1000, 500, 200, 100, 50)
bill_count <- 0
if (price %% 50 != 0) {
return("Price must be a multiple of 50.")
}
for (bill in bills) {
while (price >= bill) {
price <- price - bill
bill_count <- bill_count + 1
}
}
return(bill_count)
}
price_of_snack <- 2700
cat("Minimum number of bills needed:", min_bills(price_of_snack), "\n")
data <- data.frame(
Name = c("Annie", " Thea", "Steve", "Hanna"),
Grade1 = c(85, 75, 75, 95),
Grade2 = c(65, 75, 55, 75),
Grade3 = c(85, 90, 80, 100),
Grade4 = c(100, 90, 85, 90))
data
for (i in 1:nrow(data)) {
avg_score <- sum(data[i, 2:5]) / 4
if (avg_score > 90) {
cat(data$Name[i], "'s average grade this semester is", avg_score, "\n")
}
}
for (i in 1:nrow(data)) {
avg_score <- sum(data[i, 2:5]) / 4
if (avg_score > 90) {
cat(data$Name[i], "'s average grade this semester is", avg_score, "\n")
}
}
for (i in 1:nrow(data)) {
avg_score <- sum(data[i, 2:5]) / 4
if (avg_score > 90) {
cat(data$Name[i], "'s average grade this semester is", avg_score, "\n")
}
}
for (i in 1:nrow(data)) {
avg_score <- sum(data[i, 2:5]) / 4
if (avg_score > 90) {
cat(data$Name[i], "'s average grade this semester is", avg_score, "\n")
}
}
for (i in 1:nrow(data)) {
avg_score <- sum(data[i, 2:5]) / 4
if (avg_score >= 88.75) {
cat(data$Name[i], "'s average grade this semester is", avg_score, "\n")
}
}
results <- c()
for (i in 1:nrow(data)) {
highest_score <- 0
for (j in 2:ncol(data)) {
if (data[i, j] > highest_score) {
highest_score <- data[i, j]
}
}
if (highest_score > 90) {
results <- c(results, paste(data$Name[i], "’s highest grade this semester is", highest_score))
}
}
cat(results, "\n")
for (i in 1:nrow(data)) {
avg_score <- sum(data[i, 2:5]) / 4  # Sum the grades and divide by 4 to get the average
# Output the student's average if the average score is greater than 90
if (avg_score > 90) {
cat(data$Name[i], "'s average grade this semester is", avg_score, "\n")
}
}
# Manually calculate the average for each student
for (i in 1:nrow(students_data)) {
avg_score <- sum(students_data[i, 2:5]) / 4  # Calculate the average score for each student
# Check if the student's average score is greater than or equal to 88.75
if (avg_score >= 88.75) {
cat(students_data$Name[i], "'s average grade this semester is", avg_score, "\n")
}
}
for (i in 1:nrow(data)) {
avg_score <- sum(data[i, 2:5]) / 4
if (avg_score >= 88.75) {
cat(data$Name[i], "'s average grade this semester is", avg_score, "\n")
}
}
age <- 34, 28, 22, 36, 27, 18, 52, 39, 42, 29
age <- {34, 28, 22, 36, 27, 18, 52, 39, 42, 29}
age <- c(34, 28, 22, 36, 27, 18, 52, 39, 42, 29)
lenght(age)
age <- c(34, 28, 22, 36, 27, 18, 52, 39, 42, 29)
age
length(age)
age <- c(34, 28, 22, 36, 27, 18, 52, 39, 42, 29)
length(age)
rep_age <- 1/age
rep_age
new_age <- c(age, 0, age)
new_age
sort(age)
min(age)
max(age)
data <- c(2,4, 2, 8, 2,1,2.5, 2.4, 2.2, 2.5, 2.3, 2.5, 2.3, 2.4, 2.7)
data
data <- c(2,4, 2, 8, 2,1,2.5, 2.4, 2.2, 2.5, 2.3, 2.5, 2.3, 2.4, 2.7)
data
length(data)
double_data <- data*2
double_data
seq(1:10)
seq_numbers(20:60)
seq_numbers <- seq(20:60)
seq_numbers <- seq(20:60)
seq_integer <- seq(1:10)
seq_integer
seq_numbers <- seq(20:60)
seq_numbers
seq_numbers <- seq(20,60)
seq_numbers
seq_integer <- seq(1,10)
seq_integer
mean(seq_numbers)
sum(51, 91)
integer(1, 1000)
seq(1, 1000)
integer <- data.frame c(seq(1, 1000)
integer <- data.frame (c(seq(1, 1000))
integer
integer <- data.frame (seq(1, 1000)
integer
integer <- seq(integer)
integer
integer <- seq(1, 100)
integer
length(seq_numbers)
length(seq_integer)
length(seq_numbers)
length(mean)
length(sum)
max(integer, 10)
integer <- seq(1, 1000)
integer
max(integer, 10)
max(integer, 10)
filtered_integers <- integer[integer <= 10]
max(filtered_integers)
integer <- filter(function(i){ all(i %% c(3,5,7) !=0)}, seq(100))
integer <- Filter(function(i){ all(i %% c(3,5,7) !=0)}, seq(100))
integer
seq_backwards(1, 100)
seq(100, 1)
multiples <- which(seq(1, 24) %% 3 == 0 | seq(1, 24) %% 5 == 0)
multiples
length(integer)
length(integer)
length(multiples)
x <- {0 + x + 5 +}
x <- c(0 + x + 5 +)
x <- c(0 + x + 5 )
x <- c(0 + x + 5 )
x
age <- c(34, 28, 22, 36, 27, 18, 52, 39, 42, 29, 35, 31, 27, 22, 37, 34, 19, 20, 57, 49, 50, 37, 46, 25, 17, 37, 42, 53, 41, 51, 35, 24, 33, 41)
length(age)
score <- c(72, 86, 92, 63, 88, 89, 91, 92, 75)
score
score <- c(72, 86, 92, 63, 88, 89, 91, 92, 75)
score[2]
score[3]
a <- c(1, 2, NA, 4, NA, 6, 7)
a
a <- c(1, 2, NA, 4, NA, 6, 7)
print(a, na.print="-999")
a <- c(1, 2, NA, 4, NA, 6, 7)
print(a, 4.print="-999")
a <- c(1, 2, NA, 4, NA, 6, 7)
print(a, na.print="-999")
name <- readLines(prompt = "Input your name: ")
name <- readLine(prompt = "Input your name: ")
name <- readLine(prompt="Input your name: ")
name <- readline(prompt="Input your name: ")
x<- 5
y<- if(x<=3 && x>=1) x^2 else x-4
y
x<- 1
y<- if(x<=3 && x>=1) x^2 else x-4
y
x<- 3
y<- if(x<=3 && x>=1) x^2 else x-4
y
x<- 5
y<- if(x<=3 && x>=1){
y=x^2
}
else {
x<- 5
y<- if(x<=3 && x>=1){
y=x^2
y
}
else {
x<- 5
y<- if(x<=3 && x>=1){
y=x^2
y
}else {
y= x-4
y
}
x<- 5
if(x<=3 && x>=1){
y=x^2
y
}else {
y= x-4
y
}
ggplot(iris, aes(x=Sepal.Length, y=Petal.Length, col=Species))+geom_point() +geom_smooth()
ggplot(iris, aes(x=Sepal.Length, y=Petal.Length, col=Species))+geom_point() +geom_smooth())
num1<- 4
if(num1==4){
cat("The number is equal to ", num1)
}
if(num>4){
cat("The number us greater than to", num1)
}
num1<- 4
if(num1==4){
cat("The number is equal to ", num1)
}
if(num1>4){
cat("The number us greater than to", num1)
}
num1<- 1
if(num1==4){
cat("The number is equal to ", num1)
}
if(num1>4){
cat("The number us greater than to", num1)
}
num1<- 5
if(num1==4){
cat("The number is equal to ", num1)
}
if(num1>4){
cat("The number us greater than to", num1)
}
num1<- 5
if(num1==4){
cat("The number is equal to ", num1)
}
if(num1>4){
cat("The number is greater than to", num1)
}
results <- c()
for (i in 1:nrow(data)) {
highest_score <- 0
for (j in 2:ncol(data)) {
if (data[i, j] > highest_score) {
highest_score <- data[i, j]
}
}
if (highest_score > 90) {
results <- c(results, paste(data$Name[i],"’s highest grade this semester is", highest_score))
}
}
results <- c()
for (i in 1:nrow(data)) {
highest_score <- 0
for (j in 2:ncol(data)) {
if (data[i, j] > highest_score) {
highest_score <- data[i, j]
}
}
if (highest_score > 90) {
results <- c(results, paste(data$Name[i], "’s highest grade this semester is", highest_score))
}
}
results <- c()
for (i in 1:nrow(data)) {
highest_score <- 0
for (j in 2:ncol(data)) {
if (data[i, j] > highest_score) {
highest_score <- data[i, j]
}
}
if (highest_score > 90) {
results <- c(results, paste(data$Name[i], "’s highest grade this semester is", highest_score))
}
}
results <- c()
for (i in 1:nrow(data)) {
highest_score <- 0
for (j in 2:ncol(data)) {
if (data[i, j] > highest_score) {
highest_score <- data[i, j]
}
}
if (highest_score > 90) {
results <- c(results, paste(data$Name[i], "’s highest grade this semester is", highest_score))
}
}
results <- c()
for (i in 1:nrow(data)) {
highest_score <- 0
for (j in 2:ncol(data)) {
if (data[i, j] > highest_score) {
highest_score <- data[i, j]
}
}
if (highest_score > 90) {
results <- c(results, paste(data$Name[i], "’s highest grade this semester is", highest_score))
}
}
exhaustive_search <- function(selected_number)
if (selected_number < 1 || selected_number > 50) {
return("The number selected is beyond the range of 1 to 50")
} else if (selected_number == 20) {
return("TRUE")
} else {
return(as.character(selected_number))
}
set.seed(Sys.time())
random_number <- sample(1:50, 1)
cat("The chosen number is:", random_number, "\n")
result <- exhaustive_search(random_number)
cat("Result:", result, "\n")
exhaustive_search <- function(selected_number)
if (selected_number < 1 || selected_number > 50) {
return("The number selected is beyond the range of 1 to 50")
} else if (selected_number == 20) {
return("TRUE")
} else {
return(as.character(selected_number))
}
random_number <- sample(1:50, 1)
cat("The chosen number is:", random_number, "\n")
result <- exhaustive_search(random_number)
cat("Result:", result, "\n")
exhaustive_search <- function(selected_number)
if (selected_number < 1 || selected_number > 50) {
return("The number selected is beyond the range of 1 to 50")
} else if (selected_number == 20) {
return("TRUE")
} else {
return(as.character(selected_number))
}
random_number <- sample(1:50, 1)
cat("The chosen number is:", random_number, "\n")
result <- exhaustive_search(random_number)
cat("Result:", result, "\n")
exhaustive_search <- function(selected_number)
if (selected_number < 1 || selected_number > 50) {
return("The number selected is beyond the range of 1 to 50")
} else if (selected_number == 20) {
return("TRUE")
} else {
return(as.character(selected_number))
}
set.seed(Sys.time())
random_number <- sample(1:50, 1)
cat("The chosen number is:", random_number, "\n")
result <- exhaustive_search(random_number)
cat("Result:", result, "\n")
exhaustive_search <- function(selected_number)
if (selected_number < 1 || selected_number > 50) {
return("The number selected is beyond the range of 1 to 50")
} else if (selected_number == 20) {
return("TRUE")
} else {
return(as.character(selected_number))
}
set.seed(Sys.time())
random_number <- sample(1:50, 1)
cat("The chosen number is:", random_number, "\n")
result <- exhaustive_search(random_number)
cat("Result:", result, "\n")
exhaustive_search <- function(selected_number)
if (selected_number < 1 || selected_number > 50) {
return("The number selected is beyond the range of 1 to 50")
} else if (selected_number == 20) {
return("TRUE")
} else {
return(as.character(selected_number))
}
random_number <- sample(1:50, 1)
paste("The chosen number is:", random_number, "\n")
result <- exhaustive_search(random_number)
paste("Result:", result, "\n")
exhaustive_search <- function(selected_number)
if (selected_number < 1 || selected_number > 50) {
return("The number selected is beyond the range of 1 to 50")
} else if (selected_number == 20) {
return("TRUE")
} else {
return(as.character(selected_number))
}
random_number <- sample(1:50, 1)
paste("The chosen number is:", random_number)
result <- exhaustive_search(random_number)
paste("Result:", result)
exhaustive_search <- function(selected_number)
if (selected_number < 1 || selected_number > 50) {
return("The number selected is beyond the range of 1 to 50")
} else if (selected_number == 20) {
return("TRUE")
} else {
return(as.character(selected_number))
}
random_number <- sample(1:50, 1)
print("The chosen number is:", random_number)
exhaustive_search <- function(selected_number)
if (selected_number < 1 || selected_number > 50) {
return("The number selected is beyond the range of 1 to 50")
} else if (selected_number == 20) {
return("TRUE")
} else {
return(as.character(selected_number))
}
random_number <- sample(1:50, 1)
cat("The chosen number is:", random_number)
result <- exhaustive_search(random_number)
cat("Result:", result)
exhaustive_search <- function(selected_number)
if (selected_number < 1 || selected_number > 50) {
return("The number selected is beyond the range of 1 to 50")
} else if (selected_number == 20) {
return("TRUE")
} else {
return(as.character(selected_number))
}
random_number <- sample(1:50, 1)
cat("The chosen number is:", random_number, "\n")
result <- exhaustive_search(random_number)
cat("Result:", result, "\n")
min_bills <- function(price) {
bills <- c(1000, 500, 200, 100, 50)
bill_count <- 0
if (price %% 50 != 0) {
return("Price must be a multiple of 50.")
}
for (bill in bills) {
while (price >= bill) {
price <- price - bill
bill_count <- bill_count + 1
}
}
return(bill_count)
}
price_of_snack <- 2700
cat("Minimum number of bills needed:", min_bills(price_of_snack), "\n")
vectorA= [1,2,3,4,5]
vectorA= (1,2,3,4,5)
vectorA <- c(1,2,3,4,5)
matrixA <- matrix(0, nrow=5, ncol=5)
for(i in 1:5){
for(j in 1:5){
matrixA[i, j] <-ifelse(j>=i, vectorA[abs(j-i)+1],0)
}
}
vectorA <- c(1,2,3,4,5)
matrixA <- matrix(0, nrow=5, ncol=5)
for(i in 1:5){
for(j in 1:5){
matrixA[i, j] <-ifelse(j>=i, vectorA[abs(j-i)+1],0)
}
}
print(matrixA)
for (i in 1:5) {
for (j in 1:i) {
cat("*")
}
cat("\n")
for (i in 1:5) {
for (j in 1:i) {
cat("*")
}
cat("\n")
for (i in 1:5) {
for (j in 1:i) {
cat("*")
}
cat("\n")
}
num <- readline(prompt = "Enter the starting position for the Fibonacci sequence")
A <- as.numeric(readline(prompt = "Enter the starting number for the Fibonacci sequence: "))
